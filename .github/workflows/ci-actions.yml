# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages

name: Build step

on:
  push:
    branches: ['master']
  # pull : for pulling
    #branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.20.0] # working with react app nodejs & npm needs to installed
        # here we are mentioning with node version needs to be installed
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm ci
      - run: npm run build --if-present

  test-stage:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Running Tests
        uses: actions/checkout@v3
      - run: echo "Runinng"

  build-and-push-docker-image:
    name: Build Docker image and push to repos
    # runs when the code is compiling  and tests  are passing
    runs-on: ubuntu-latest
    needs: ['build', 'test-stage'] # just like depends on docker-compose
    # build & test-stage need to completed first then this stage runs
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      # Setup Docker build actions
      - name: Login to Dockerhub
        uses: docker/login-actions@v2
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Image and push to docker hub
        uses: docker/login-actions@v2
        with:
          context: ./ # relative path to the place where Dockerfile is located in the source code
          tags: /
            formycore/gitops01:${{ github.sha }} # sha will coming from the commit id
            # sha is long string  
          push: ${{ github.ref == 'refs/heads/master' }} # build on feature branches,push only on main branch
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}



